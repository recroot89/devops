---
- hosts: all
  gather_facts: false
  vars_prompt:
    - name: "devops_image_tag"
      prompt: "DevOps image tag"
      private: false

  tasks:
    - set_fact: devops_image_tag={{ devops_image_tag }}
      tags: always

- hosts: webservers
  gather_facts: false
  # become: true
  # become_user: "{{ devops_run_user }}"

  tasks:
    - name: Create a network
      docker_network:
        name: "{{ devops_docker_network }}"

    - template:
        src: environment.j2
        dest: "{{ devops_env_file }}"
      tags: [webserver, env, app, nginx]

    - name: download app image
      docker_image:
        name: "{{ devops_image_name }}:{{ devops_image_tag }}"
        force: true
      tags: app

    - name: download nginx image
      docker_image:
        name: "{{ devops_nginx_image_name }}:{{ devops_image_tag }}"
        force: true
      tags: nginx

    - name: run migrations
      docker_container:
        recreate: true
        detach: false
        name: devops-migrations
        command: "bin/rails db:migrate"
        image: "{{ devops_image_name }}:{{ devops_image_tag }}"
        state: started
        env_file: "{{ devops_env_file }}"
        env:
          RAILS_ENV: prod
        volumes:
          - "/tmp:/tmp"
          - "/var/tmp:/var/tmp"
      run_once: true
      tags: [webservers, app]

    - name: start nginx
      docker_container:
        recreate: true
        name: devops-nginx
        image: "{{ devops_nginx_image_name }}:{{ devops_image_tag }}"
        state: started
        # log_driver: awslogs
        # log_options:
        #   awslogs-group: "{{ devops_aws_logs_group }}"
        #   awslogs-stream: "{{ devops_aws_logs_stream_web }}"
        #   awslogs-region: '{{ devops_aws_region }}'
        restart_policy: always
        published_ports:
          - "80:8080"
        networks:
          - name: "{{ devops_docker_network }}"
      tags: [webservers, nginx]

    - name: start application
      docker_container:
        recreate: true
        name: app
        image: "{{ devops_image_name }}:{{ devops_image_tag }}"
        state: started
        # log_driver: awslogs
        # log_options:
        #   awslogs-group: "{{ devops_aws_logs_group }}"
        #   awslogs-stream: "{{ devops_aws_logs_stream_web }}"
        #   awslogs-region: "{{ devops_aws_region }}"
        restart_policy: always
        env_file: "{{ devops_env_file }}"
        env:
          RAILS_ENV: production
          NODE_ENV: production
        # published_ports:
        #   - "80:{{ devops_port }}"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/tmp:/tmp"
          - "/opt:/opt"
          - "/var/tmp:/var/tmp"
        networks:
          - name: "{{ devops_docker_network }}"
      tags: [webservers, app, env]

    - lineinfile:
        regexp: "DEVOPS_VERSION"
        line: "DEVOPS_VERSION={{ devops_image_tag }}"
        dest: /etc/environment
        backup: true
        state: present
      become: true
      tags: [webservers, app]
